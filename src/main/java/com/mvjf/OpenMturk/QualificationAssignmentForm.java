/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mvjf.OpenMturk;

import com.amazonaws.services.mturk.AmazonMTurk;
import com.amazonaws.services.mturk.model.AssociateQualificationWithWorkerRequest;
import static com.mvjf.OpenMturk.QualificationForm.getCustomQualificationTypes;
import java.util.HashMap;
import java.util.List;
import javax.swing.JFileChooser;

/**
 *
 * @author matt
 */
public class QualificationAssignmentForm extends javax.swing.JDialog {
    private final HashMap<String,String> customQtypeHM;
    private HashMap<String, String> workerValuesHM;
    private final AmazonMTurk client;
    
    
    public QualificationAssignmentForm(java.awt.Frame parent, boolean modal, AmazonMTurk client) {
        super(parent, modal);
        initComponents();
        this.customQtypeHM = getCustomQualificationTypes(client);
        this.client = client;
        setQualificationTypeNames();
    }
    
    public final void setQualificationTypeNames() {
        String qtypeNames[] = (String[])customQtypeHM.keySet().toArray(new String[customQtypeHM.size()]);
        for (int i = 0; i < qtypeNames.length; i++) {
            cmbxQAQualificationTypes.addItem(qtypeNames[i]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkQASendNotification = new javax.swing.JCheckBox();
        lblQAWorkerIds = new javax.swing.JLabel();
        lblQAValues = new javax.swing.JLabel();
        btnQAAssignQualifications = new javax.swing.JButton();
        btnQAExit = new javax.swing.JButton();
        lblQAQualificationType = new javax.swing.JLabel();
        btnQAUploadCSV = new javax.swing.JButton();
        sclQAWorkerIDs = new javax.swing.JScrollPane();
        lstQAWorkerIDs = new javax.swing.JList<>();
        sclQAValues = new javax.swing.JScrollPane();
        lstQAValues = new javax.swing.JList<>();
        cmbxQAQualificationTypes = new javax.swing.JComboBox<>();
        lblQAStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        chkQASendNotification.setText("Send Notification");

        lblQAWorkerIds.setText("WorkerIds:");

        lblQAValues.setText("Values:");

        btnQAAssignQualifications.setText("Assign Qualifications");
        btnQAAssignQualifications.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnQAAssignQualificationsMouseClicked(evt);
            }
        });

        btnQAExit.setText("Exit");
        btnQAExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnQAExitMouseClicked(evt);
            }
        });

        lblQAQualificationType.setText("Qualification Type:");

        btnQAUploadCSV.setText("Upload Worker CSV");
        btnQAUploadCSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnQAUploadCSVMouseClicked(evt);
            }
        });

        lstQAWorkerIDs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstQAWorkerIDs.setEnabled(false);
        sclQAWorkerIDs.setViewportView(lstQAWorkerIDs);

        lstQAValues.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstQAValues.setEnabled(false);
        sclQAValues.setViewportView(lstQAValues);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnQAExit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnQAAssignQualifications))
                    .addComponent(lblQAStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnQAUploadCSV)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblQAWorkerIds)
                                    .addComponent(sclQAWorkerIDs, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sclQAValues, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblQAValues))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(chkQASendNotification)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblQAQualificationType)
                                        .addGap(22, 22, 22)))
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbxQAQualificationTypes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQAWorkerIds)
                    .addComponent(lblQAValues)
                    .addComponent(lblQAQualificationType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sclQAValues)
                        .addComponent(sclQAWorkerIDs, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))
                    .addComponent(cmbxQAQualificationTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkQASendNotification)
                    .addComponent(btnQAUploadCSV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQAAssignQualifications)
                    .addComponent(btnQAExit))
                .addGap(18, 18, 18)
                .addComponent(lblQAStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnQAUploadCSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQAUploadCSVMouseClicked
        try {
            JFileChooser loadCSVDlg = new JFileChooser();
            loadCSVDlg.setDialogTitle("Select a CSV to upload");
            loadCSVDlg.setMultiSelectionEnabled(false);
            int userSelection = loadCSVDlg.showOpenDialog(this);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                String filePath = loadCSVDlg.getSelectedFile().getAbsolutePath();
                List<String[]> data = Util.loadCSV(filePath);
                String[] workers = new String[data.size()];
                String[] values = new String[data.size()];
                for (int i = 0; i < data.size(); i++) {
                    workers[i] = data.get(i)[0];
                    values[i] = data.get(i)[1];
                }
                lstQAWorkerIDs.setListData(workers);
                lstQAValues.setListData(values);
            }
        } catch (Exception e) {
            lblQAStatus.setText("Error uploading CSV, ensure your CSV file has a heading and uses proper formatting");
        }
        
    }//GEN-LAST:event_btnQAUploadCSVMouseClicked

    private void btnQAExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQAExitMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnQAExitMouseClicked

    private void btnQAAssignQualificationsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQAAssignQualificationsMouseClicked
        try {
            String[] workers = Util.getListData(lstQAWorkerIDs);
            String[] values = Util.getListData(lstQAValues);
            for (int i = 0; i < workers.length; i++) {
                AssociateQualificationWithWorkerRequest request = new AssociateQualificationWithWorkerRequest();
                request.setWorkerId(workers[i]);
                request.setIntegerValue(Integer.parseInt(values[i]));
                request.setQualificationTypeId(customQtypeHM.get((String)cmbxQAQualificationTypes.getSelectedItem()));
                request.setSendNotification(chkQASendNotification.isSelected());
                client.associateQualificationWithWorker(request);
            }
            String message = "Worker Qualifications assigned successfully";
            if (chkQASendNotification.isSelected()) {
                lblQAStatus.setText(message + ", workers notified!");
            }
            else {
                lblQAStatus.setText(message + "!");
            }
        } catch (Exception e) {
            lblQAStatus.setText("Error submitting request, check your inputs are valid values");
        }
    }//GEN-LAST:event_btnQAAssignQualificationsMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQAAssignQualifications;
    private javax.swing.JButton btnQAExit;
    private javax.swing.JButton btnQAUploadCSV;
    private javax.swing.JCheckBox chkQASendNotification;
    private javax.swing.JComboBox<String> cmbxQAQualificationTypes;
    private javax.swing.JLabel lblQAQualificationType;
    private javax.swing.JLabel lblQAStatus;
    private javax.swing.JLabel lblQAValues;
    private javax.swing.JLabel lblQAWorkerIds;
    private javax.swing.JList<String> lstQAValues;
    private javax.swing.JList<String> lstQAWorkerIDs;
    private javax.swing.JScrollPane sclQAValues;
    private javax.swing.JScrollPane sclQAWorkerIDs;
    // End of variables declaration//GEN-END:variables
}
